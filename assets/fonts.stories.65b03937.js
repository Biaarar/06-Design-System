var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.9405170e.js";import{c as e,A as c,M as d}from"./Props.c9bcfb34.js";import"./jsx-runtime.1b137838.js";import"./iframe.d708dec9.js";import{T as u}from"./TokensGrid.7f053ba3.js";import{b as l}from"./index.75b2c3cd.js";import"./string.cee34bcb.js";import"./index.05bb8e02.js";import"./es.map.constructor.9d94d896.js";import"./es.number.to-fixed.1c8bed8d.js";function m(){return m=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)({}).hasOwnProperty.call(s,a)&&(o[a]=s[a])}return o},m.apply(null,arguments)}n(m,"_extends");const y={},f="wrapper";function p({components:o,...t}){return e(f,m({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Fonts",mdxType:"Meta"}),e("h1",null,"Fonts"),e(u,{tokens:l,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const g=n(()=>{throw new Error("Docs-only story")},"__page");g.parameters={docsOnly:!0};const r={title:"Tokens/Fonts",includeStories:["__page"]},x={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:x,mdxComponentAnnotations:r},e(p,null))};const v=["__page"];export{v as __namedExportsOrder,g as __page,r as default};
//# sourceMappingURL=fonts.stories.65b03937.js.map
